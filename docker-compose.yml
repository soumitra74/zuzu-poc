version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: reviews-postgres
    environment:
      POSTGRES_DB: hotel_reviews
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hotel_reviews"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # LocalStack for S3 emulation
  localstack:
    image: localstack/localstack:3.0
    container_name: reviews-localstack
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotel-reviews
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/hotel_reviews
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: false
      
      # AWS S3 configuration (LocalStack)
      AWS_S3_ENDPOINT: http://localstack:4566
      AWS_S3_BUCKET: hotel-reviews
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      
      # Application configuration
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: docker
      
      # JVM settings
      JAVA_OPTS: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -XX:+UseG1GC
        -XX:+UseStringDeduplication
        -Djava.security.egd=file:/dev/./urandom
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/jobs/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  localstack_data:
    driver: local
  app_logs:
    driver: local
  # redis_data:
  #   driver: local

networks:
  default:
    name: reviews-network 